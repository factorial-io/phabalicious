#!/usr/bin/env php
<?php

use Phabalicious\AppKernel;
use Phabalicious\Utilities\Logger;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Debug\Debug;
use Symfony\Component\Dotenv\Dotenv;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Output\ConsoleOutput;
use Symfony\Component\EventDispatcher\EventDispatcher;

set_time_limit(0);

$autoloaders = [
  __DIR__ . '/../../../autoload.php',
  __DIR__ . '/../vendor/autoload.php'
];

foreach ($autoloaders as $autoloader) {
  if (file_exists($autoloader)) {
    require_once $autoloader;
  }
}

if (!isset($_SERVER['APP_ENV'])) {
    if (!class_exists(Dotenv::class)) {
        throw new \RuntimeException('APP_ENV environment variable is not defined. You need to define environment variables for configuration or add "symfony/dotenv" as a Composer dependency to load variables from a .env file.');
    }
    if (file_exists(__DIR__.'/../.env')) {
        (new Dotenv())->load(__DIR__ . '/../.env');
    }
}

$input = new ArgvInput();
$env = $input->getParameterOption(['--env', '-e'], $_SERVER['APP_ENV'] ?? 'prod', false);
$debug = (bool) ($_SERVER['APP_DEBUG'] ?? ('prod' !== $env)) && !$input->hasParameterOption('--no-debug', true);

if ($debug) {
    umask(0000);

    if (class_exists(Debug::class)) {
        Debug::enable();
    }
}

$kernel = new AppKernel($env, $debug);
$kernel->boot();
$container = $kernel->getContainer();

/** @var Phabalicious\Utilities\Logger $logger */
$logger = $container->get(Logger::class);
/** @var \Symfony\Component\Console\Output\OutputInterface $output */
$output = $container->get(ConsoleOutput::class);

/** @var Application $application */
$application = $container->get(Application::class);

/** @var EventDispatcher $dispatcher */
$dispatcher = $container->get(EventDispatcher::class);
$application->setDispatcher($dispatcher);
\Phabalicious\Command\SelfUpdateCommand::registerListener($dispatcher);

$version = '@git_tag@';
if ($version[0] == '@') {
    $version = \Phabalicious\Utilities\Utilities::FALLBACK_VERSION;
}

$application->setVersion($version);
$application->setName('phabalicious');
$application->setDefaultCommand('list');
$application->run($input, $output);
