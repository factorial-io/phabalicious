<?php

namespace Phabalicious\Tests;

use Phabalicious\Configuration\ConfigurationService;
use Phabalicious\Method\BaseMethod;
use Phabalicious\Method\MethodFactory;
use Psr\Log\AbstractLogger;
use Symfony\Component\Console\Application;

class MethodFactoryTest extends PhabTestCase
{

    /**
     * @var MethodFactory
     */
    private MethodFactory $methods;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $logger = $this->getMockBuilder(AbstractLogger::class)->getMock();
        $config_factory = $this->getMockBuilder(ConfigurationService::class)
            ->disableOriginalConstructor()
            ->getMock();

        $this->methods = new MethodFactory($config_factory, $logger);
    }

    public function testGetMethod(): void
    {
        $method = $this->getMockBuilder(BaseMethod::class)
            ->setMethods(['getName', 'supports'])
            ->disableOriginalConstructor()
            ->getMock();
        $method
            ->method('getName')
            ->willReturn('mocked_method');
        $method
            ->method('supports')
            ->willReturn(true);

        $this->methods->addMethod($method);

        $found_method = $this->methods->getMethod($method->getName());


        $this->assertEquals($found_method->getName(), $method->getName());
    }
}
